/**
 * This class is generated by jOOQ
 */
package com.davidm.mykindlenews.generated.jooq.information_schema.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OptimizerTraceRecord extends org.jooq.impl.TableRecordImpl<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord> implements org.jooq.Record4<java.lang.String, java.lang.String, java.lang.Integer, java.lang.Byte> {

	private static final long serialVersionUID = 692337661;

	/**
	 * Setter for <code>information_schema.OPTIMIZER_TRACE.QUERY</code>.
	 */
	public void setQuery(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>information_schema.OPTIMIZER_TRACE.QUERY</code>.
	 */
	public java.lang.String getQuery() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>information_schema.OPTIMIZER_TRACE.TRACE</code>.
	 */
	public void setTrace(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>information_schema.OPTIMIZER_TRACE.TRACE</code>.
	 */
	public java.lang.String getTrace() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>information_schema.OPTIMIZER_TRACE.MISSING_BYTES_BEYOND_MAX_MEM_SIZE</code>.
	 */
	public void setMissingBytesBeyondMaxMemSize(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>information_schema.OPTIMIZER_TRACE.MISSING_BYTES_BEYOND_MAX_MEM_SIZE</code>.
	 */
	public java.lang.Integer getMissingBytesBeyondMaxMemSize() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>information_schema.OPTIMIZER_TRACE.INSUFFICIENT_PRIVILEGES</code>.
	 */
	public void setInsufficientPrivileges(java.lang.Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>information_schema.OPTIMIZER_TRACE.INSUFFICIENT_PRIVILEGES</code>.
	 */
	public java.lang.Byte getInsufficientPrivileges() {
		return (java.lang.Byte) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.String, java.lang.String, java.lang.Integer, java.lang.Byte> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.String, java.lang.String, java.lang.Integer, java.lang.Byte> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace.OPTIMIZER_TRACE.QUERY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace.OPTIMIZER_TRACE.TRACE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace.OPTIMIZER_TRACE.MISSING_BYTES_BEYOND_MAX_MEM_SIZE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field4() {
		return com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace.OPTIMIZER_TRACE.INSUFFICIENT_PRIVILEGES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getQuery();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getTrace();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getMissingBytesBeyondMaxMemSize();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value4() {
		return getInsufficientPrivileges();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OptimizerTraceRecord value1(java.lang.String value) {
		setQuery(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OptimizerTraceRecord value2(java.lang.String value) {
		setTrace(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OptimizerTraceRecord value3(java.lang.Integer value) {
		setMissingBytesBeyondMaxMemSize(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OptimizerTraceRecord value4(java.lang.Byte value) {
		setInsufficientPrivileges(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OptimizerTraceRecord values(java.lang.String value1, java.lang.String value2, java.lang.Integer value3, java.lang.Byte value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OptimizerTraceRecord
	 */
	public OptimizerTraceRecord() {
		super(com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace.OPTIMIZER_TRACE);
	}

	/**
	 * Create a detached, initialised OptimizerTraceRecord
	 */
	public OptimizerTraceRecord(java.lang.String query, java.lang.String trace, java.lang.Integer missingBytesBeyondMaxMemSize, java.lang.Byte insufficientPrivileges) {
		super(com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace.OPTIMIZER_TRACE);

		setValue(0, query);
		setValue(1, trace);
		setValue(2, missingBytesBeyondMaxMemSize);
		setValue(3, insufficientPrivileges);
	}
}
