/**
 * This class is generated by jOOQ
 */
package com.davidm.mykindlenews.generated.jooq.mysql.tables.records;

/**
 * MySQL Foreign Servers table
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServersRecord extends org.jooq.impl.UpdatableRecordImpl<com.davidm.mykindlenews.generated.jooq.mysql.tables.records.ServersRecord> implements org.jooq.Record9<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String> {

	private static final long serialVersionUID = -1453040325;

	/**
	 * Setter for <code>mysql.servers.Server_name</code>.
	 */
	public void setServerName(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mysql.servers.Server_name</code>.
	 */
	public java.lang.String getServerName() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>mysql.servers.Host</code>.
	 */
	public void setHost(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mysql.servers.Host</code>.
	 */
	public java.lang.String getHost() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>mysql.servers.Db</code>.
	 */
	public void setDb(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mysql.servers.Db</code>.
	 */
	public java.lang.String getDb() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>mysql.servers.Username</code>.
	 */
	public void setUsername(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>mysql.servers.Username</code>.
	 */
	public java.lang.String getUsername() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>mysql.servers.Password</code>.
	 */
	public void setPassword(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>mysql.servers.Password</code>.
	 */
	public java.lang.String getPassword() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>mysql.servers.Port</code>.
	 */
	public void setPort(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>mysql.servers.Port</code>.
	 */
	public java.lang.Integer getPort() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>mysql.servers.Socket</code>.
	 */
	public void setSocket(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>mysql.servers.Socket</code>.
	 */
	public java.lang.String getSocket() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>mysql.servers.Wrapper</code>.
	 */
	public void setWrapper(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>mysql.servers.Wrapper</code>.
	 */
	public java.lang.String getWrapper() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>mysql.servers.Owner</code>.
	 */
	public void setOwner(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>mysql.servers.Owner</code>.
	 */
	public java.lang.String getOwner() {
		return (java.lang.String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.SERVER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.HOST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.DB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.PORT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.SOCKET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.WRAPPER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS.OWNER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getServerName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getHost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getDb();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getPort();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getSocket();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getWrapper();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getOwner();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value1(java.lang.String value) {
		setServerName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value2(java.lang.String value) {
		setHost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value3(java.lang.String value) {
		setDb(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value4(java.lang.String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value5(java.lang.String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value6(java.lang.Integer value) {
		setPort(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value7(java.lang.String value) {
		setSocket(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value8(java.lang.String value) {
		setWrapper(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord value9(java.lang.String value) {
		setOwner(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ServersRecord values(java.lang.String value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.Integer value6, java.lang.String value7, java.lang.String value8, java.lang.String value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ServersRecord
	 */
	public ServersRecord() {
		super(com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS);
	}

	/**
	 * Create a detached, initialised ServersRecord
	 */
	public ServersRecord(java.lang.String serverName, java.lang.String host, java.lang.String db, java.lang.String username, java.lang.String password, java.lang.Integer port, java.lang.String socket, java.lang.String wrapper, java.lang.String owner) {
		super(com.davidm.mykindlenews.generated.jooq.mysql.tables.Servers.SERVERS);

		setValue(0, serverName);
		setValue(1, host);
		setValue(2, db);
		setValue(3, username);
		setValue(4, password);
		setValue(5, port);
		setValue(6, socket);
		setValue(7, wrapper);
		setValue(8, owner);
	}
}
