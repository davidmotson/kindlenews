/**
 * This class is generated by jOOQ
 */
package com.davidm.mykindlenews.generated.jooq.information_schema.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OptimizerTrace extends org.jooq.impl.TableImpl<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord> {

	private static final long serialVersionUID = -826668962;

	/**
	 * The reference instance of <code>information_schema.OPTIMIZER_TRACE</code>
	 */
	public static final com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace OPTIMIZER_TRACE = new com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord> getRecordType() {
		return com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord.class;
	}

	/**
	 * The column <code>information_schema.OPTIMIZER_TRACE.QUERY</code>.
	 */
	public final org.jooq.TableField<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord, java.lang.String> QUERY = createField("QUERY", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>information_schema.OPTIMIZER_TRACE.TRACE</code>.
	 */
	public final org.jooq.TableField<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord, java.lang.String> TRACE = createField("TRACE", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>information_schema.OPTIMIZER_TRACE.MISSING_BYTES_BEYOND_MAX_MEM_SIZE</code>.
	 */
	public final org.jooq.TableField<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord, java.lang.Integer> MISSING_BYTES_BEYOND_MAX_MEM_SIZE = createField("MISSING_BYTES_BEYOND_MAX_MEM_SIZE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.OPTIMIZER_TRACE.INSUFFICIENT_PRIVILEGES</code>.
	 */
	public final org.jooq.TableField<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord, java.lang.Byte> INSUFFICIENT_PRIVILEGES = createField("INSUFFICIENT_PRIVILEGES", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>information_schema.OPTIMIZER_TRACE</code> table reference
	 */
	public OptimizerTrace() {
		this("OPTIMIZER_TRACE", null);
	}

	/**
	 * Create an aliased <code>information_schema.OPTIMIZER_TRACE</code> table reference
	 */
	public OptimizerTrace(java.lang.String alias) {
		this(alias, com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace.OPTIMIZER_TRACE);
	}

	private OptimizerTrace(java.lang.String alias, org.jooq.Table<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord> aliased) {
		this(alias, aliased, null);
	}

	private OptimizerTrace(java.lang.String alias, org.jooq.Table<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.OptimizerTraceRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.davidm.mykindlenews.generated.jooq.information_schema.InformationSchema.INFORMATION_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace as(java.lang.String alias) {
		return new com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace rename(java.lang.String name) {
		return new com.davidm.mykindlenews.generated.jooq.information_schema.tables.OptimizerTrace(name, null);
	}
}
