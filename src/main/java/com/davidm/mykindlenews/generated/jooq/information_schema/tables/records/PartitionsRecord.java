/**
 * This class is generated by jOOQ
 */
package com.davidm.mykindlenews.generated.jooq.information_schema.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartitionsRecord extends org.jooq.impl.TableRecordImpl<com.davidm.mykindlenews.generated.jooq.information_schema.tables.records.PartitionsRecord> {

	private static final long serialVersionUID = -1438668332;

	/**
	 * Setter for <code>information_schema.PARTITIONS.TABLE_CATALOG</code>.
	 */
	public void setTableCatalog(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.TABLE_CATALOG</code>.
	 */
	public java.lang.String getTableCatalog() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.TABLE_SCHEMA</code>.
	 */
	public void setTableSchema(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.TABLE_SCHEMA</code>.
	 */
	public java.lang.String getTableSchema() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.TABLE_NAME</code>.
	 */
	public void setTableName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.TABLE_NAME</code>.
	 */
	public java.lang.String getTableName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.PARTITION_NAME</code>.
	 */
	public void setPartitionName(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.PARTITION_NAME</code>.
	 */
	public java.lang.String getPartitionName() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.SUBPARTITION_NAME</code>.
	 */
	public void setSubpartitionName(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.SUBPARTITION_NAME</code>.
	 */
	public java.lang.String getSubpartitionName() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.PARTITION_ORDINAL_POSITION</code>.
	 */
	public void setPartitionOrdinalPosition(org.jooq.types.ULong value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.PARTITION_ORDINAL_POSITION</code>.
	 */
	public org.jooq.types.ULong getPartitionOrdinalPosition() {
		return (org.jooq.types.ULong) getValue(5);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.SUBPARTITION_ORDINAL_POSITION</code>.
	 */
	public void setSubpartitionOrdinalPosition(org.jooq.types.ULong value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.SUBPARTITION_ORDINAL_POSITION</code>.
	 */
	public org.jooq.types.ULong getSubpartitionOrdinalPosition() {
		return (org.jooq.types.ULong) getValue(6);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.PARTITION_METHOD</code>.
	 */
	public void setPartitionMethod(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.PARTITION_METHOD</code>.
	 */
	public java.lang.String getPartitionMethod() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.SUBPARTITION_METHOD</code>.
	 */
	public void setSubpartitionMethod(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.SUBPARTITION_METHOD</code>.
	 */
	public java.lang.String getSubpartitionMethod() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.PARTITION_EXPRESSION</code>.
	 */
	public void setPartitionExpression(java.lang.String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.PARTITION_EXPRESSION</code>.
	 */
	public java.lang.String getPartitionExpression() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.SUBPARTITION_EXPRESSION</code>.
	 */
	public void setSubpartitionExpression(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.SUBPARTITION_EXPRESSION</code>.
	 */
	public java.lang.String getSubpartitionExpression() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.PARTITION_DESCRIPTION</code>.
	 */
	public void setPartitionDescription(java.lang.String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.PARTITION_DESCRIPTION</code>.
	 */
	public java.lang.String getPartitionDescription() {
		return (java.lang.String) getValue(11);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.TABLE_ROWS</code>.
	 */
	public void setTableRows(org.jooq.types.ULong value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.TABLE_ROWS</code>.
	 */
	public org.jooq.types.ULong getTableRows() {
		return (org.jooq.types.ULong) getValue(12);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.AVG_ROW_LENGTH</code>.
	 */
	public void setAvgRowLength(org.jooq.types.ULong value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.AVG_ROW_LENGTH</code>.
	 */
	public org.jooq.types.ULong getAvgRowLength() {
		return (org.jooq.types.ULong) getValue(13);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.DATA_LENGTH</code>.
	 */
	public void setDataLength(org.jooq.types.ULong value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.DATA_LENGTH</code>.
	 */
	public org.jooq.types.ULong getDataLength() {
		return (org.jooq.types.ULong) getValue(14);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.MAX_DATA_LENGTH</code>.
	 */
	public void setMaxDataLength(org.jooq.types.ULong value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.MAX_DATA_LENGTH</code>.
	 */
	public org.jooq.types.ULong getMaxDataLength() {
		return (org.jooq.types.ULong) getValue(15);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.INDEX_LENGTH</code>.
	 */
	public void setIndexLength(org.jooq.types.ULong value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.INDEX_LENGTH</code>.
	 */
	public org.jooq.types.ULong getIndexLength() {
		return (org.jooq.types.ULong) getValue(16);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.DATA_FREE</code>.
	 */
	public void setDataFree(org.jooq.types.ULong value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.DATA_FREE</code>.
	 */
	public org.jooq.types.ULong getDataFree() {
		return (org.jooq.types.ULong) getValue(17);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.CREATE_TIME</code>.
	 */
	public void setCreateTime(java.sql.Timestamp value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.CREATE_TIME</code>.
	 */
	public java.sql.Timestamp getCreateTime() {
		return (java.sql.Timestamp) getValue(18);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.UPDATE_TIME</code>.
	 */
	public void setUpdateTime(java.sql.Timestamp value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.UPDATE_TIME</code>.
	 */
	public java.sql.Timestamp getUpdateTime() {
		return (java.sql.Timestamp) getValue(19);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.CHECK_TIME</code>.
	 */
	public void setCheckTime(java.sql.Timestamp value) {
		setValue(20, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.CHECK_TIME</code>.
	 */
	public java.sql.Timestamp getCheckTime() {
		return (java.sql.Timestamp) getValue(20);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.CHECKSUM</code>.
	 */
	public void setChecksum(org.jooq.types.ULong value) {
		setValue(21, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.CHECKSUM</code>.
	 */
	public org.jooq.types.ULong getChecksum() {
		return (org.jooq.types.ULong) getValue(21);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.PARTITION_COMMENT</code>.
	 */
	public void setPartitionComment(java.lang.String value) {
		setValue(22, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.PARTITION_COMMENT</code>.
	 */
	public java.lang.String getPartitionComment() {
		return (java.lang.String) getValue(22);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.NODEGROUP</code>.
	 */
	public void setNodegroup(java.lang.String value) {
		setValue(23, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.NODEGROUP</code>.
	 */
	public java.lang.String getNodegroup() {
		return (java.lang.String) getValue(23);
	}

	/**
	 * Setter for <code>information_schema.PARTITIONS.TABLESPACE_NAME</code>.
	 */
	public void setTablespaceName(java.lang.String value) {
		setValue(24, value);
	}

	/**
	 * Getter for <code>information_schema.PARTITIONS.TABLESPACE_NAME</code>.
	 */
	public java.lang.String getTablespaceName() {
		return (java.lang.String) getValue(24);
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PartitionsRecord
	 */
	public PartitionsRecord() {
		super(com.davidm.mykindlenews.generated.jooq.information_schema.tables.Partitions.PARTITIONS);
	}

	/**
	 * Create a detached, initialised PartitionsRecord
	 */
	public PartitionsRecord(java.lang.String tableCatalog, java.lang.String tableSchema, java.lang.String tableName, java.lang.String partitionName, java.lang.String subpartitionName, org.jooq.types.ULong partitionOrdinalPosition, org.jooq.types.ULong subpartitionOrdinalPosition, java.lang.String partitionMethod, java.lang.String subpartitionMethod, java.lang.String partitionExpression, java.lang.String subpartitionExpression, java.lang.String partitionDescription, org.jooq.types.ULong tableRows, org.jooq.types.ULong avgRowLength, org.jooq.types.ULong dataLength, org.jooq.types.ULong maxDataLength, org.jooq.types.ULong indexLength, org.jooq.types.ULong dataFree, java.sql.Timestamp createTime, java.sql.Timestamp updateTime, java.sql.Timestamp checkTime, org.jooq.types.ULong checksum, java.lang.String partitionComment, java.lang.String nodegroup, java.lang.String tablespaceName) {
		super(com.davidm.mykindlenews.generated.jooq.information_schema.tables.Partitions.PARTITIONS);

		setValue(0, tableCatalog);
		setValue(1, tableSchema);
		setValue(2, tableName);
		setValue(3, partitionName);
		setValue(4, subpartitionName);
		setValue(5, partitionOrdinalPosition);
		setValue(6, subpartitionOrdinalPosition);
		setValue(7, partitionMethod);
		setValue(8, subpartitionMethod);
		setValue(9, partitionExpression);
		setValue(10, subpartitionExpression);
		setValue(11, partitionDescription);
		setValue(12, tableRows);
		setValue(13, avgRowLength);
		setValue(14, dataLength);
		setValue(15, maxDataLength);
		setValue(16, indexLength);
		setValue(17, dataFree);
		setValue(18, createTime);
		setValue(19, updateTime);
		setValue(20, checkTime);
		setValue(21, checksum);
		setValue(22, partitionComment);
		setValue(23, nodegroup);
		setValue(24, tablespaceName);
	}
}
